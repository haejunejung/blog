name: CI
on: 
    push:
      branches: ['main']
    pull_request:
      branches: ['main']
jobs:
    lhci:
        name: Lighthuse
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                node-version: 20

            - name: Enable Corepack
              run: corepack enable
            - name: Install Dependencies
              run: yarn install --frozen-lockfile
            - name: Build
              run: yarn build
            - name: Run Lighthouse CI
              run: |
                npm install -g @lhci/cli
                lhci autorun || echo "Failed to Run Lighthouse CI"

            - name: Verify lhci_reports path
              run: |
                ls -la ./lhci_reports

            - name: Format lighthouse score
              id: format_lighthouse_score
              uses: actions/github-script@v7
              with:
                github-token: ${{secrets.GITHUB_TOKEN}}
                script: |
                  const path = require('path');
                  const fs = require('fs');
                  const results = JSON.parse(fs.readFileSync(path.resolve("./lhci_reports/manifest.json")));
                  
                  let comments = "";

                  results.forEach((result) => {
                    const { summary, jsonPath } = result;
                    
                    const details = JSON.parse(fs.readFileSync(jsonPath));
                    
                    const { audits } = details;

                    const formatResult = (res) => Math.round(res * 100);

                    Object.keys(summary).forEach((key) => (summary[key] = formatResult(summary[key])));

                    const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

                    const comment = [
                      `‚ö°Ô∏è Lighthouse report!`,
                      `| Category | Score |`,
                      `| --- | --- |`,
                      `| ${score(summary.performance)} Performance | ${summary.performance} |`,
                      `| ${score(summary.accessibility)} Accessbility | ${summary.accessibility} |`,
                      `| ${score(summary['best-practices'])} Best Practices | ${summary['best-practices']} |`,
                      `| ${score(summary.seo)} SEO | ${summary.seo} |`,
                    ].join("\n");

                    const detail = [
                      `| Category | Score |`,
                      `| --- | --- |`,
                      `| ${score(audits["first-contentful-paint"].score * 100)} First Contentful Paint | audits["first-contentful-paint"].displayValue} |`,
                      `| ${score(audits["largest-contentful-paint"].score * 100)} Largest Contentful Paint | audits["largest-contentful-paint"].displayValue} |`,
                      `| ${score(audits["total-blocking-time"].score * 100)} Total Blocking Time | audits["total-blocking-time"].displayValue} |`,
                      `| ${score(audits["speed-index"].score * 100)} Speed Index | audits["speed-index"].displayValue} |`,
                      `| ${score(audits["cumulative-layout-shift"].score * 100)} Cumulative Layout Shift | audits["cumulative-layout-shift"].displayValue} |`,
                      `| ${score(audits["interactive"].score * 100)} Time to Interactive | audits["interactive"].displayValue} |`,
                    ].join("\n");

                    let comments = comment + "\n" + detail + "\n";
                  });

                  core.setOutput('comments', comments);

            - name: Create comment
              uses: peter-evans/create-or-update-comment@v4
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                comment-id: 1
                body: ${{ steps.format_lighthouse_score.outputs.comments }}